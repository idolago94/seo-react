{"version":3,"sources":["screens/PostList.js","screens/PostDetails.js","screens/Welcome.js","screens/UserList.js","screens/UserDetails.js","screens/Photos.js","screens/PhotoDetails.js","screens/TodoList.js","screens/TodoDetails.js","screens/AlbumList.js","screens/AlbumDetails.js","screens/Main/Switch.jsx","screens/Main/Main.js","App.js","index.js"],"names":["PostList","props","state","posts","this","handleFetch","fetch","then","res","json","setState","slice","Helmet","charSet","name","content","map","p","to","id","title","Component","PostDetails","post","match","params","body","Object","keys","k","key","Welcome","UserList","users","u","UserDetails","user","username","JSON","stringify","Photos","photos","style","display","flexDirection","flexWrap","src","thumbnailUrl","PhotoDetails","photo","url","TodoList","todos","TodoDetails","todo","AlbumList","albums","AlbumDetails","album","Promise","all","a","length","path","exact","component","render","staticContext","status","from","Main","Switch","App","className","rootElement","document","getElementById","hasChildNodes","hydrate"],"mappings":"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","file":"static/js/main.c4378d90.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from \"react-helmet\";\n\nexport default class PostList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            posts: []\n        }\n    }\n\n    componentDidMount() {\n        this.handleFetch()\n    }\n\n    handleFetch() {\n        fetch('https://jsonplaceholder.typicode.com/posts')\n            .then(res => res.json()).then(posts => this.setState({ posts: posts.slice(0, 10) }))\n    }\n\n    render() {\n        return <div>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Posts List</title>\n                <meta name=\"description\" content=\"list of all posts\" />\n            </Helmet>\n            <h1>{'Posts'}</h1>\n            <ul>\n                {this.state.posts.map(p => <Link to={`/posts/${p.id}`}><li>{p.title}</li></Link>)}\n            </ul>\n        </div>\n    }\n}","import React, { Component } from 'react'\nimport { Helmet } from \"react-helmet\";\n\nexport default class PostDetails extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            post: {}\n        }\n    }\n\n    componentDidMount() {\n        fetch(`https://jsonplaceholder.typicode.com/posts/${this.props.match.params.id}`)\n            .then(res => res.json()).then(post => this.setState({ post }))\n    }\n\n    render() {\n        return <div>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>{this.state.post.title}</title>\n                <meta name=\"description\" content={this.state.post.body} />\n            </Helmet>\n            <h1>{this.state.post.title}</h1>\n            <ul>\n                {Object.keys(this.state.post).map(k => <li key={k}>{k}: {this.state.post[k]}</li>)}\n            </ul>\n        </div>\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from \"react-helmet\";\n\nexport default class Welcome extends Component {\n    render() {\n        return <div>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Welcome seo-react</title>\n                <meta name=\"description\" content=\"welcome to the first react app with professional seo\" />\n            </Helmet>\n            <h1>Welcome</h1>\n            <ul>\n                <Link to='/posts'>\n                    <li>Posts</li>\n                </Link>\n                <Link to='/users'>\n                    <li>Users</li>\n                </Link>\n                <Link to='/photos'>\n                    <li>Photos</li>\n                </Link>\n                <Link to='/todos'>\n                    <li>Todos</li>\n                </Link>\n                <Link to='/albums'>\n                    <li>Albums</li>\n                </Link>\n                <Link to='/about'>\n                    <li>About</li>\n                </Link>\n            </ul>\n        </div>\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from \"react-helmet\";\n\nexport default class UserList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: []\n        }\n    }\n\n    componentDidMount() {\n        this.handleFetch()\n    }\n\n    handleFetch() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(res => res.json()).then(users => this.setState({ users: users.slice(0, 10) }))\n    }\n\n    render() {\n        return <div>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Users List</title>\n                <meta name=\"description\" content=\"list of all users\" />\n            </Helmet>\n            <h1>{'Users'}</h1>\n            <ul>\n                {this.state.users.map(u => <Link to={`/users/${u.id}`}><li>{u.name}</li></Link>)}\n            </ul>\n        </div>\n    }\n}","import React, { Component } from 'react'\nimport { Helmet } from \"react-helmet\";\n\nexport default class UserDetails extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {}\n        }\n    }\n\n    componentDidMount() {\n        fetch(`https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`)\n            .then(res => res.json()).then(user => this.setState({ user }))\n    }\n\n    render() {\n        return <div>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>{this.state.user.name}</title>\n                <meta name=\"description\" content={`this page displat the details of the user ${this.state.user.name}(#${this.state.user.username})`} />\n            </Helmet>\n            <h1>{this.state.user.name}</h1>\n            <ul>\n                {Object.keys(this.state.user).map(k => <li key={k}>{k}: {JSON.stringify(this.state.user[k])}</li>)}\n            </ul>\n        </div>\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from \"react-helmet\";\n\nexport default class Photos extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            photos: []\n        }\n    }\n\n    componentDidMount() {\n        this.handleFetch()\n    }\n\n    handleFetch() {\n        fetch('https://jsonplaceholder.typicode.com/photos')\n            .then(res => res.json()).then(photos => this.setState({ photos: photos.slice(0, 10) }))\n    }\n\n    render() {\n        return <div>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Photos List</title>\n                <meta name=\"description\" content=\"list of all photos\" />\n            </Helmet>\n            <h1>{'Photos'}</h1>\n            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n                {this.state.photos.map(p => <Link to={`/photos/${p.id}`}>\n                    <img src={p.thumbnailUrl} />\n                    <p>{p.title}</p>\n                </Link>)}\n            </div>\n        </div>\n    }\n}","import React, { Component } from 'react'\nimport { Helmet } from \"react-helmet\";\n\nexport default class PhotoDetails extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            photo: {}\n        }\n    }\n\n    componentDidMount() {\n        fetch(`https://jsonplaceholder.typicode.com/photos/${this.props.match.params.id}`)\n            .then(res => res.json()).then(photo => this.setState({ photo }))\n    }\n\n    render() {\n        return <div>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>{this.state.photo.title}</title>\n                <meta name=\"description\" content={`this page display photo with the title ${this.state.photo.title}`} />\n            </Helmet>\n            <h1>{this.state.photo.title}</h1>\n            <ul>\n                {Object.keys(this.state.photo).map(k => <li key={k}>{k}: {this.state.photo[k]}</li>)}\n            </ul>\n            <img src={this.state.photo.url} />\n        </div>\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from \"react-helmet\";\n\nexport default class TodoList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            todos: []\n        }\n    }\n\n    componentDidMount() {\n        this.handleFetch()\n    }\n\n    handleFetch() {\n        fetch('https://jsonplaceholder.typicode.com/todos')\n            .then(res => res.json()).then(todos => this.setState({ todos: todos.slice(0, 10) }))\n    }\n\n    render() {\n        return <div>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Todos List</title>\n                <meta name=\"description\" content=\"list of all todos tasks\" />\n            </Helmet>\n            <h1>{'To Dos'}</h1>\n            <ul>\n                {this.state.todos.map(p => <Link to={`/todos/${p.id}`}><li>{p.title}</li></Link>)}\n            </ul>\n        </div>\n    }\n}","import React, { Component } from 'react'\nimport { Helmet } from \"react-helmet\";\n\nexport default class TodoDetails extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            todo: {}\n        }\n    }\n\n    componentDidMount() {\n        fetch(`https://jsonplaceholder.typicode.com/posts/${this.props.match.params.id}`)\n            .then(res => res.json()).then(todo => this.setState({ todo }))\n    }\n\n    render() {\n        return <div>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>{this.state.todo.title}</title>\n                <meta name=\"description\" content={this.state.todo.body} />\n            </Helmet>\n            <h1>{this.state.todo.title}</h1>\n            <ul>\n                {Object.keys(this.state.todo).map(k => <li key={k}>{k}: {this.state.todo[k]}</li>)}\n            </ul>\n        </div>\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from \"react-helmet\";\n\nexport default class AlbumList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            albums: []\n        }\n    }\n\n    componentDidMount() {\n        this.handleFetch()\n    }\n\n    handleFetch() {\n        fetch('https://jsonplaceholder.typicode.com/albums')\n            .then(res => res.json()).then(albums => this.setState({ albums: albums.slice(0, 10) }))\n    }\n\n    render() {\n        return <div>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Albums List</title>\n                <meta name=\"description\" content=\"list of all albums\" />\n            </Helmet>\n            <h1>{'Albums'}</h1>\n            <ul>\n                {this.state.albums.map(p => <Link to={`/albums/${p.id}`}><li>{p.title}</li></Link>)}\n            </ul>\n        </div>\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from \"react-helmet\";\n\nexport default class AlbumDetails extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            album: {},\n            photos: []\n        }\n    }\n\n    componentDidMount() {\n        Promise.all([\n            fetch(`https://jsonplaceholder.typicode.com/albums/${this.props.match.params.id}`),\n            fetch(`https://jsonplaceholder.typicode.com/photos?albumId=${this.props.match.params.id}`)\n        ]).then(async (res) => {\n            const album = await res[0].json()\n            const photos = await res[1].json()\n            return { album, photos }\n        }).then(({ album, photos }) => {\n            this.setState({ album, photos })\n        })\n    }\n\n    render() {\n        return <div>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>{this.state.album.title}</title>\n                <meta name=\"description\" content={`this page display the album ${this.state.album.title}, including ${this.state.photos.length} photos`} />\n            </Helmet>\n            <h1>{this.state.album.title}</h1>\n            <ul>\n                {Object.keys(this.state.album).map(k => <li key={k}>{k}: {this.state.album[k]}</li>)}\n            </ul>\n            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n                {this.state.photos.map(p => <Link to={`/photos/${p.id}`}><img src={p.thumbnailUrl} /></Link>)}\n            </div>\n        </div>\n    }\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route, Link, Redirect } from 'react-router-dom'\nimport PostList from '../PostList';\nimport PostDetails from '../PostDetails'\nimport Welcome from '../Welcome';\nimport UserList from '../UserList';\nimport UserDetails from '../UserDetails'\nimport Photos from '../Photos'\nimport PhotoDetails from '../PhotoDetails';\nimport TodoList from '../TodoList';\nimport TodoDetails from '../TodoDetails'\nimport AlbumList from '../AlbumList';\nimport AlbumDetails from '../AlbumDetails';\n\nexport default (\n    <Switch>\n        <Route path=\"/posts\" exact component={PostList} />\n        <Route path='/posts/:id' component={PostDetails} />\n        <Route path=\"/users\" exact component={UserList} />\n        <Route path=\"/users/:id\" component={UserDetails} />\n        <Route path=\"/photos\" exact component={Photos} />\n        <Route path=\"/photos/:id\" component={PhotoDetails} />\n        <Route path=\"/todos\" exact component={TodoList} />\n        <Route path=\"/todos/:id\" component={TodoDetails} />\n        <Route path=\"/albums\" exact component={AlbumList} />\n        <Route path=\"/albums/:id\" component={AlbumDetails} />\n        <Route path=\"/\" exact component={Welcome} />\n        <Route\n            render={({ staticContext }) => {\n                // there is no `staticContext` on the client, so\n                // we need to guard against that here\n                if (staticContext) staticContext.status = 555;\n                return <Redirect from={'/about'} to={'/staticpage'} />;\n            }}\n        />\n    </Switch>\n);","import React, { Component } from 'react'\nimport { BrowserRouter, Link } from 'react-router-dom'\nimport PostList from '../PostList';\nimport PostDetails from '../PostDetails'\nimport Welcome from '../Welcome';\nimport UserList from '../UserList';\nimport UserDetails from '../UserDetails'\nimport Photos from '../Photos'\nimport PhotoDetails from '../PhotoDetails';\nimport TodoList from '../TodoList';\nimport TodoDetails from '../TodoDetails'\nimport AlbumList from '../AlbumList';\nimport AlbumDetails from '../AlbumDetails';\nimport Switch from './Switch';\n\nexport default class Main extends Component {\n    render() {\n        return <div>\n            <BrowserRouter>\n                <Link to='/'>Home</Link>\n                {Switch}\n            </BrowserRouter>\n        </div>\n    }\n}","import React from 'react';\nimport './App.css';\nimport Main from './screens/Main/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import App from './App';\nimport React from 'react';\n\n// react-snap\n\nimport { hydrate, render } from \"react-dom\";\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n\n// react-snapshot\n\n// import { render } from 'react-snapshot';\n// render(\n//     <App/>,\n//     document.getElementById('root')\n//   );"],"sourceRoot":""}